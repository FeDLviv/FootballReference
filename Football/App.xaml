<Application x:Class="Football.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Football"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <local:BoolConverter x:Key="BoolConverter" />

        <local:VisibilityConverter x:Key="VisibilityConverter" />
        
        <local:StringUpperConverter x:Key="StringUpperConverter" />

        <local:EnumConverter x:Key="EnumConverter"/>

        <local:ImageSourceConverter x:Key="ImageSourceConverter" />

        <ObjectDataProvider x:Key="MyEnum"
                MethodName="GetValues" 
                ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:Positions" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!--LinearGradientBrush x:Key="MyGradientBrush" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FF1561EA" Offset="0" />
            <GradientStop Color="#FFE47812" Offset="1" />
        </LinearGradientBrush-->
        <LinearGradientBrush x:Key="MyGradientBrush" StartPoint="0,0" EndPoint="1,1" >
            <GradientStop Color="Red" Offset="0" />
            <!--GradientStop Color="White" Offset="0.1" /-->
            <GradientStop Color="Blue" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="MyListBox" TargetType="ListBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="MinWidth" Value="250" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ListBox.BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect Color="#FF1561EA" Direction="320" ShadowDepth="5" Opacity="0.5" Softness="1" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MyBase">
            <Setter Property="Control.Margin" Value="5" />
        </Style>

        <Style x:Key="MyButton" TargetType="Button" BasedOn="{StaticResource MyBase}">
            <Setter Property="Padding" Value="5" />
        </Style>
        
        <Style x:Key="MyToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource MyBase}">
            <Setter Property="Padding" Value="5" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MyLabel" TargetType="Label" BasedOn="{StaticResource MyBase}">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        
        <Style x:Key="MyTextBox" TargetType="TextBox" BasedOn="{StaticResource MyBase}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="IsReadOnly" 
                    Value="{Binding ElementName=toggleBut, Path=IsChecked, Converter={StaticResource BoolConverter}}" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center"  Padding="5,0" Foreground="Red" FontWeight="ExtraBold" Text="X" />
                            <AdornedElementPlaceholder />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="MyDatePicker" TargetType="DatePicker" BasedOn="{StaticResource MyBase}">
            <Setter Property="DisplayDateStart" Value="1.1.1980" />
            <Setter Property="DisplayDateEnd" Value="{x:Static sys:DateTime.Now}" />
        </Style>
        
        <Style x:Key="MyBorder" TargetType="Border" BasedOn="{StaticResource MyBase}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="CornerRadius" Value="3" />
        </Style>

        <!--ColumnWidth="1*"-->
        <Style x:Key="MyDataGrid" TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
            <Setter Property="IsReadOnly" Value="True" />
        </Style>

        <Style x:Key="MyTextBlock" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

    </Application.Resources>
</Application>
